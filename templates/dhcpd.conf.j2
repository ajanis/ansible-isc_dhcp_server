#jinja2: trim_blocks: True, lstrip_blocks: True
# {{ ansible_managed }}

omapi-port {{ isc_dhcp_server_omapi_port }};
ddns-update-style none;

default-lease-time 600;
max-lease-time 7200;
log-facility local7;

option architecture code 93 = unsigned integer 16;
if exists user-class and option user-class = "iPXE" {
  filename "http://{{ ansible_default_ipv4.address }}/unattended/iPXE?bootstrap=1";
} elsif option architecture = 00:06 {
  filename "ipxe.efi";
} elsif option architecture = 00:07 {
  filename "ipxe.efi";
} elsif option architecture = 00:09 {
  filename "ipxe.efi";
} else {
  filename "undionly.kpxe";
}

{% if foreman_proxy_dhcp_subnets is defined and foreman_proxy_dhcp_subnets != None %}
{% for net in foreman_proxy_dhcp_subnets %}
subnet {{ net.network }} netmask {{ net.mask }} {
  option routers               {{ net.gateway }};
  {% if net.domains is defined and net.domains != None %}
  option domain-name           "{{ net.domains[0] }}";
  option domain-search         "{% for dn in net.domains %}{{ dn }}{% if not loop.last %},{% endif %}{% endfor %}"
  {% endif %}
  {% if net.dns_primary is defined and net.dns_primary != None %}
    {% if net.dns_secondary is defined and net.dns_secondary != None %}
  option domain-name-servers   {{ net.dns_primary }}, {{ net.dns_secondary }};
    {% else %}
  option domain-name-servers   {{ net.dns_primary }};
    {% endif %}
  {% endif %}
  range                        {{ net.from_ip }} {{ net.to_ip }};
}
{% endfor %}
{% elif isc_dhcp_server_subnets is defined and isc_dhcp_server_subnets != None %}
{% for net in isc_dhcp_server_subnets %}
subnet {{ net.network }} netmask {{ net.mask }} {
  option routers               {{ net.gateway }};
  {% if net.domains is defined and net.domains != None %}
  option domain-name           "{{ net.domains[0] }}";
  option domain-search         "{% for dn in net.domains %}{{ dn }}{% if not loop.last %},{% endif %}{% endfor %};"
  {% endif %}
  {% if net.dns_primary is defined and net.dns_primary != None %}
    {% if net.dns_secondary is defined and net.dns_secondary != None %}
  option domain-name-servers   {{ net.dns_primary }}, {{ net.dns_secondary }};
    {% else %}
  option domain-name-servers   {{ net.dns_primary }};
    {% endif %}
  {% endif %}
  range                        {{ net.from_ip }} {{ net.to_ip }};
}
{% endfor %}
{% endif %}
